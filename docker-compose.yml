version: "3.8"

services:
  db-base: &db-base
    image: postgres:13.4
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: light
      POSTGRES_USER: warrior
      POSTGRES_DB: overloaded
    ports:
      - 5432:5432

  service:
    image: node:14.17.5-alpine
    command: sh -c "yarn install"
    working_dir: /app
    volumes:
      - ./:/app
    command: sh -c "yarn migrate:update && yarn start"
    ports:
      - 3001:3001
    environment:
      PORT: 3001
      # TODO: Set to prod when deployment is ready
      NODE_ENV: development
      POSTGRES_PASSWORD: light
      POSTGRES_USER: warrior
      POSTGRES_DB: overloaded
      POSTGRES_HOST: db
    depends_on:
      - db

  service-staging:
    build:
      context: .
      dockerfile: Dockerfile.staging
    environment: 
      PORT: 3001
    ports: 
      - 3001:3001

  test-ci:
    image: node:14.17.5-alpine
    command: sh -c "yarn install && yarn migrate:update && yarn test --coverage"
    working_dir: /app
    volumes:
      - ./:/app
    ports:
      - 3001:3001
    environment:
      POSTGRES_PASSWORD: light
      POSTGRES_USER: warrior
      POSTGRES_DB: overloaded
      POSTGRES_HOST: db-ci
    depends_on:
      - db-ci

  db:
    <<: *db-base

  db-ci:
    <<: *db-base

volumes:
  postgres-data:
