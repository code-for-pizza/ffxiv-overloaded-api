version: "3.8"

services:
  base: &base
    image: node:14.17.5-alpine
    command: sh -c "yarn install"
    working_dir: /app
    volumes:
      - ./:/app
    environment:
      POSTGRES_PASSWORD: light
      POSTGRES_USER: warrior
      POSTGRES_DB: overloaded
      POSTGRES_HOST: db

  db-base: &db-base
    image: postgres:13.4
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql/db_seed.sql:/docker-entrypoint-initdb.d/db_seed.sql
    environment:
      POSTGRES_PASSWORD: light
      POSTGRES_USER: warrior
      POSTGRES_DB: overloaded

  # service run when remoting into a container as the coding environment in VS Code
  devcontainer:
    build:
      context: .
      dockerfile: ./docker/devcontainer.dockerfile
      args:
        # [Choice] Node.js version: 14, 12, 10
        VARIANT: 14
        # On Linux, you may need to update USER_UID and USER_GID below if not your local UID is not 1000.
        USER_UID: 1000
        USER_GID: 1000

    volumes:
      - .:/workspace
    environment:
      PORT: 3002

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    network_mode: service:db-local

    # Uncomment the next line to use a non-root user for all processes.
    # user: node

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  db-local:
    <<: *db-base

    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  service:
    <<: *base
    command: sh -c "yarn install && yarn start"
    ports:
      - 3001:3001
    environment:
      PORT: 3001
    depends_on:
      - db

  db:
    <<: *db-base
    ports:
      - 5432:5432

  lint: 
    <<: *base
    command: sh -c "yarn install && yarn format-check && yarn lint"

  test-ci:
    <<: *base
    command: sh -c "yarn install && yarn test --coverage"

volumes:
  postgres-data:
